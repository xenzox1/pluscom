{"version":3,"sources":["../../../../src/server/api/controllers/TodoController.js"],"names":["TodoController","req","res","Todo","find","err","r","json","Erro","end","findById","params","taskId","create","nome","body","success","id","update","status","u","$set","findByIdAndUpdate","findByIdAndRemove","erro"],"mappings":";;;;;;;;AAAA;;;;;;;;IAEqBA,c;;;;;;;oCASL;AACR,mBAAO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBC,oCAAKC,IAAL,CAAU,EAAV,EAAc,UAACC,GAAD,EAAMC,CAAN,EAAY;AACtB,wBAAID,GAAJ,EAAS;AACLH,4BAAIK,IAAJ,CAASP,eAAeQ,IAAf,CAAoBH,GAApB,CAAT;AACAH,4BAAIO,GAAJ;AACH;AACDP,wBAAIK,IAAJ,CAASD,CAAT;AACAJ,wBAAIO,GAAJ;AACH,iBAPD;AAQH,aATD;AAUH;;;oCAEW;AACR,mBAAO,UAACR,GAAD,EAAMC,GAAN,EAAc;AACjBC,oCAAKO,QAAL,CAAcT,IAAIU,MAAJ,CAAWC,MAAzB,EAAiC,UAACP,GAAD,EAAMC,CAAN,EAAY;AACzC,wBAAID,GAAJ,EAAS;AACLH,4BAAIK,IAAJ,CAASP,eAAeQ,IAAf,CAAoBH,GAApB,CAAT;AACAH,4BAAIO,GAAJ;AACH;AACDP,wBAAIK,IAAJ,CAASD,CAAT;AACAJ,wBAAIO,GAAJ;AACH,iBAPD;AAQH,aATD;AAUH;;;oCAEW;AACR,mBAAO,UAACR,GAAD,EAAMC,GAAN,EAAc;AACjBC,oCAAKU,MAAL,CAAY,EAACC,MAAMb,IAAIc,IAAJ,CAASD,IAAhB,EAAZ,EAAmC,UAACT,GAAD,EAAS;AACxC,wBAAIA,GAAJ,EAAS;AACLH,4BAAIK,IAAJ,CAASP,eAAeQ,IAAf,CAAoBH,GAApB,CAAT;AACAH,4BAAIO,GAAJ;AACH;AACDP,wBAAIK,IAAJ,CAAS,EAACS,SAAS,qBAAV,EAAT;AACAd,wBAAIO,GAAJ;AACH,iBAPD;AAQH,aATD;AAUH;;;oCAEW;AACR,mBAAO,UAACR,GAAD,EAAMC,GAAN,EAAc;AACjB,oBAAMe,KAAKhB,IAAIU,MAAJ,CAAWC,MAAtB;AACA,oBAAMM,SAAS,EAAf;AACA,oBAAIjB,IAAIc,IAAJ,CAASD,IAAb,EAAmB;AACfI,2BAAOJ,IAAP,GAAcb,IAAIc,IAAJ,CAASD,IAAvB;AACH;;AAED,oBAAIb,IAAIc,IAAJ,CAASI,MAAb,EAAqB;AACjBD,2BAAOC,MAAP,GAAgBlB,IAAIc,IAAJ,CAASI,MAAzB;AACH;;AAED,oBAAMC,IAAI,EAACC,MAAMH,MAAP,EAAV;;AAEAf,oCAAKmB,iBAAL,CAAuBL,EAAvB,EAA2BG,CAA3B,EAA8B,UAACf,GAAD,EAAS;AACnC,wBAAIA,GAAJ,EAAS;AACLH,4BAAIK,IAAJ,CAASP,eAAeQ,IAAf,CAAoBH,GAApB,CAAT;AACAH,4BAAIO,GAAJ;AACH;AACDP,wBAAIK,IAAJ,CAAS,EAACS,SAAS,yBAAV,EAAT;AACAd,wBAAIO,GAAJ;AACH,iBAPD;AAQH,aArBD;AAsBH;;;oCAEW;AACR,mBAAO,UAACR,GAAD,EAAMC,GAAN,EAAc;AACjBC,oCAAKoB,iBAAL,CAAuBtB,IAAIU,MAAJ,CAAWC,MAAlC,EAA0C,UAACP,GAAD,EAAS;AAC/C,wBAAIA,GAAJ,EAAS;AACLH,4BAAIK,IAAJ,CAASP,eAAeQ,IAAf,CAAoBH,GAApB,CAAT;AACAH,4BAAIO,GAAJ;AACH;AACDP,wBAAIK,IAAJ,CAAS,EAACS,SAAS,uBAAV,EAAT;AACAd,wBAAIO,GAAJ;AACH,iBAPD;AAQH,aATD;AAUH;;;6BAlFWJ,G,EAAK;AACb,mBAAO;AACHmB,sBAAM,IADH;AAEHnB,qBAAKA;AAFF,aAAP;AAIH;;;;;;kBAPgBL,c","file":"TodoController.js","sourcesContent":["import Todo from '../models/TodoModel';\r\n\r\nexport default class TodoController {\r\n\r\n    static Erro(err) {\r\n        return {\r\n            erro: true,\r\n            err: err\r\n        }\r\n    }\r\n\r\n    selectAll() {\r\n        return (req, res) => {\r\n            Todo.find({}, (err, r) => {\r\n                if (err) {\r\n                    res.json(TodoController.Erro(err));\r\n                    res.end();\r\n                }\r\n                res.json(r);\r\n                res.end();\r\n            });\r\n        }\r\n    }\r\n\r\n    selectOne() {\r\n        return (req, res) => {\r\n            Todo.findById(req.params.taskId, (err, r) => {\r\n                if (err) {\r\n                    res.json(TodoController.Erro(err));\r\n                    res.end();\r\n                }\r\n                res.json(r);\r\n                res.end();\r\n            });\r\n        }\r\n    }\r\n\r\n    createOne() {\r\n        return (req, res) => {\r\n            Todo.create({nome: req.body.nome}, (err) => {\r\n                if (err) {\r\n                    res.json(TodoController.Erro(err));\r\n                    res.end();\r\n                }\r\n                res.json({success: 'Criado com sucesso!'});\r\n                res.end();\r\n            });\r\n        }\r\n    }\r\n\r\n    updateOne() {\r\n        return (req, res) => {\r\n            const id = req.params.taskId;\r\n            const update = {};\r\n            if (req.body.nome) {\r\n                update.nome = req.body.nome;\r\n            }\r\n\r\n            if (req.body.status) {\r\n                update.status = req.body.status;\r\n            }\r\n\r\n            const u = {$set: update};\r\n\r\n            Todo.findByIdAndUpdate(id, u, (err) => {\r\n                if (err) {\r\n                    res.json(TodoController.Erro(err));\r\n                    res.end();\r\n                }\r\n                res.json({success: 'Atualizado com sucesso!'});\r\n                res.end();\r\n            })\r\n        }\r\n    }\r\n\r\n    deleteOne() {\r\n        return (req, res) => {\r\n            Todo.findByIdAndRemove(req.params.taskId, (err) => {\r\n                if (err) {\r\n                    res.json(TodoController.Erro(err));\r\n                    res.end();\r\n                }\r\n                res.json({success: 'Deletado com sucesso!'});\r\n                res.end();\r\n            });\r\n        }\r\n    }\r\n}"]}